.SYNTAX PROGRAM

PROGRAM = .LABEL("section .text")
->("global _start")
.LABEL("_start:")
$ PAREN_EXPRESSION;

PAREN_EXPRESSION = "(" (ARITHMETIC_EXPRESSION | DEFINE_STATEMENT | BUILTINS | FUNCTION_CALL) ")";

DEFINE_STATEMENT = "define" (DEFINE_CONST_STATEMENT | DEFINE_FUNCTION_STATEMENT);

DEFINE_CONST_STATEMENT = .ID .LABEL("section .data") .RS(* " db ") .NUMBER ->(*) .LABEL("section .text");

DEFINE_FUNCTION_STATEMENT = "(" .ID .LABEL(* ":") $(.ID) ")" $ PAREN_EXPRESSION;

ARITHMETIC_EXPRESSION = "*" ARITHMETIC_EXPRESSION_ARGUMENT_FIRST ARITHMETIC_EXPRESSION_ARGUMENT_REST;

ARITHMETIC_EXPRESSION_ARGUMENT_FIRST = (.ID ->("mov eax, [" * "]")) | (.NUMBER ->("mov eax, " *));

ARITHMETIC_EXPRESSION_ARGUMENT_REST = (.ID ->("imul eax, [" * "]")) | (.NUMBER ->("imul eax, " *));

FUNCTION_CALL = .ID %> FUNCTION_CALL_ARGUMENT ->("call " %);

FUNCTION_CALL_ARGUMENT = .ID ->("push [" * "]")
	| .NUMBER ->("push " *);

BUILTINS = "print" 
	| "println" 
	| "input" 
	| "exit" 
		->("mov eax, 1")
		->("mov ebx, 0")
		->("int 0x80");

.END
