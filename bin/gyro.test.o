       ADR PROGRAM
PROGRAM
       LB 
       CL "_start"
       OUT 
       JMP BODY
       BE 
A0 
A1 
       R 
BODY
A2 
       JMP FUNCTION
       BF A3 
A3 
       BT A4 
       JMP DECLARE_VAR
       BF A5 
A5 
       BT A4 
       JMP DECLARE_CONST
       BF A6 
A6 
       BT A4 
       JMP RETURN_STATEMENT
       BF A7 
A7 
       BT A4 
       JMP FUNCTION_CALL
       BF A8 
A8 
A4 
       BT A2 
       SET 
       BF A9 
A9 
A10 
       R 
DECLARE_VAR
       TST "var"
       BF A11 
       SET 
       BE 
       JMP ASSIGNMENT
       BE 
       CL "%MUT"
       OUT 
A11 
A12 
       R 
DECLARE_CONST
       TST "const"
       BF A13 
       SET 
       BE 
       JMP ASSIGNMENT
       BE 
       CL "%IMUT"
       OUT 
A13 
A14 
       R 
ASSIGNMENT
       JMP TYPED_DECLARATION
       BF A15 
       SET 
       BE 
       TST "="
       BE 
       SET 
       BE 
       JMP EXP
       BE 
       CL "STO"
       OUT 
       SET 
       BE 
       TST ";"
       BE 
A15 
A16 
       R 
TYPED_DECLARATION
       ID 
       BF A17 
       CL "ADR"
       CI 
       OUT 
       SET 
       BE 
       TST ":"
       BF A18 
       SET 
       BE 
       JMP TYPE
       BE 
       CL "%CVT"
       CO 
       OUT 
A18 
A19 
       BF A20 
A20 
       BT A21 
       SET 
       BF A22 
A22 
A21 
       BE 
A17 
A23 
       R 
EXP
       JMP EX2
       BF A24 
A25 
       JMP BINOP_PLUS
       BF A26 
       JMP EX2
       BE 
       CL "ADD"
       OUT 
A26 
       BT A27 
       JMP BINOP_MIN
       BF A28 
       JMP EX2
       BE 
       CL "SUB"
       OUT 
A28 
A27 
       BT A25 
       SET 
       BE 
A24 
A29 
       R 
EX2
       JMP EX3
       BF A30 
A31 
       JMP BINOP_MUL
       BF A32 
       JMP EX3
       BE 
       CL "MUL"
       OUT 
A32 
       BT A33 
       JMP BINOP_DIV
       BF A34 
       JMP EX3
       BE 
       CL "DIV"
       OUT 
A34 
A33 
       BT A31 
       SET 
       BE 
A30 
A35 
       R 
EX3
       JMP EX4
       BF A36 
A37 
       JMP BINOP_POW
       BF A38 
       JMP EX3
       BE 
       CL "POW"
       OUT 
A38 
A39 
       BT A37 
       SET 
       BE 
A36 
A40 
       R 
EX4
       JMP BINOP_PLUS
       BF A41 
       JMP EX5
       BE 
A41 
       BT A42 
       JMP BINOP_MIN
       BF A43 
       JMP EX5
       BE 
       CL "NEG"
       OUT 
A43 
       BT A42 
       JMP EX5
       BF A44 
A44 
A42 
       R 
EX5
       ID 
       BF A45 
       CL "LDN"
       CI 
       OUT 
A45 
       BT A46 
       NUM 
       BF A47 
       CL "LDC"
       CI 
       OUT 
A47 
       BT A46 
       TST "("
       BF A48 
       JMP EX1
       BE 
       TST ")"
       BE 
A48 
A46 
       R 
BINOP
       JMP BINOP_DIV
       BF A49 
A49 
       BT A50 
       JMP BINOP_OR
       BF A51 
A51 
A50 
       R 
BINOP_DIV
       TST "/"
       BF A52 
A52 
A53 
       R 
BINOP_MUL
       TST "*"
       BF A54 
A54 
A55 
       R 
BINOP_MIN
       TST "-"
       BF A56 
A56 
A57 
       R 
BINOP_PLUS
       TST "+"
       BF A58 
A58 
A59 
       R 
BINOP_POW
       TST "**"
       BF A60 
A60 
A61 
       R 
BINOP_OR
       TST "|"
       BF A62 
A62 
A63 
       R 
FUNCTION
       TST "function"
       BF A64 
       CL "JMP"
       GN1 
       OUT 
       SET 
       BE 
       ID 
       BE 
       IN 
       BF A65 
       ERR "error: function may only be defined once"
       BE 
A65 
       BT A66 
       PUSHI 
       ASSIGN 
       BF A67 
       LB 
       CI 
       OUT 
       TST "("
       BE 
       SET 
       BE 
       JMP ARGUMENT_LIST
       BE 
       SET 
       BE 
       TST ")"
       BE 
       SET 
       BE 
       TST ":"
       BF A68 
       SET 
       BE 
       JMP FUNCTION_RETURN_TYPE
       BE 
       CL "%RETTYPE"
       CO 
       OUT 
A68 
       BT A69 
       SET 
       BF A70 
A70 
A69 
       BE 
       SET 
       BE 
       TST "{"
       BE 
       SET 
       BE 
       JMP BODY
       BE 
       SET 
       BE 
       TST "}"
       BE 
       LB 
       GN1 
       OUT 
A67 
A71 
       BF A72 
A72 
A66 
       BE 
A64 
A73 
       R 
ARGUMENT_LIST
       JMP GET_ARGUMENT
       BF A74 
       SET 
       BE 
A75 
       TST ","
       BF A76 
       JMP GET_ARGUMENT
       BE 
A76 
A77 
       BT A75 
       SET 
       BE 
A74 
A78 
       R 
GET_ARGUMENT
       ID 
       BF A79 
       CL "POP"
       CI 
       OUT 
       SET 
       BE 
       TST ":"
       BF A80 
       SET 
       BE 
       JMP TYPE
       BE 
       CL "%CVT"
       CO 
       OUT 
A80 
A81 
       BF A82 
A82 
       BT A83 
       SET 
       BF A84 
A84 
A83 
       BE 
A79 
A85 
       R 
FUNCTION_CALL
       ID 
       BF A86 
       IN 
       BF A87 
       CIOUT 
       BE 
       TST "("
       BE 
       SET 
       BE 
       JMP PASS_ARGUMENT_LIST
       BE 
       SET 
       BE 
       TST ")"
       BE 
       CL "JMP"
       CO 
       OUT 
       SET 
       BE 
       TST ";"
       BF A88 
A88 
       BT A89 
       SET 
       BF A90 
A90 
A89 
       BE 
A87 
A91 
       BF A92 
A92 
       BT A93 
       ERR "error: call to undefined function"
       BF A94 
A94 
A93 
       BE 
A86 
A95 
       R 
PASS_ARGUMENT_LIST
       JMP PASS_ARGUMENT
       BF A96 
       SET 
       BE 
A97 
       TST ","
       BF A98 
       JMP PASS_ARGUMENT
       BE 
A98 
A99 
       BT A97 
       SET 
       BE 
A96 
A100 
       R 
PASS_ARGUMENT
       JMP EXP
       BF A101 
       CL "PUSH"
       OUT 
A101 
       BT A102 
       SR 
       BF A103 
       CL "LDC"
       CI 
       OUT 
       CL "PUSH"
       OUT 
A103 
A102 
       R 
RETURN_STATEMENT
       TST "return"
       BF A104 
       SET 
       BE 
       JMP EXP
       BE 
       CL "RET"
       OUT 
       SET 
       BE 
       TST ";"
       BF A105 
A105 
       BT A106 
       SET 
       BF A107 
A107 
A106 
       BE 
A104 
A108 
       R 
TYPE
       ID 
       BF A109 
       CIOUT 
       BE 
       TST "<"
       BF A110 
       OUTMOV "<"
       BE 
       SET 
       BE 
       JMP TYPE
       BE 
A111 
       TST ","
       BF A112 
       OUTMOV ","
       BE 
       JMP TYPE
       BE 
A112 
A113 
       BT A111 
       SET 
       BE 
       TST ">"
       BE 
       OUTMOV ">"
       BE 
A110 
A114 
       BF A115 
A115 
       BT A116 
       SET 
       BF A117 
A117 
A116 
       BE 
A109 
A118 
       R 
FUNCTION_RETURN_TYPE
       JMP TYPE
       BF A119 
A120 
       TST "|"
       BF A121 
       OUTMOV "|"
       BE 
       JMP TYPE
       BE 
A121 
A122 
       BT A120 
       SET 
       BE 
A119 
A123 
       R 
       END 
       